# Simple workflow for deploying static content to GitHub Pages
name: docs-publish

on:
  push:
    branches:
      - main
    paths:
      - 'docs/**'
      - 'src/agilab/resources/help/**'
      - '.github/workflows/docs-publish.yaml'
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      # Tests and coverage badges are handled by ci.yml + Codecov; docs publish remains build-free
      - name: Use committed docs/html (no build)
        run: |
          set -euo pipefail
          if [ ! -d docs/html ] || [ -z "$(ls -A docs/html 2>/dev/null)" ]; then
            echo "[docs] docs/html missing or empty; attempting fallback copy from src/agilab/resources/help" >&2
            if [ -d src/agilab/resources/help ]; then
              mkdir -p docs/html
              rsync -a --delete src/agilab/resources/help/ docs/html/
            else
              echo "[docs] No sources available; creating placeholder index.html" >&2
              mkdir -p docs/html
              echo "<html><body><h1>No documentation sources found</h1></body></html>" > docs/html/index.html
            fi
          fi
          # Ensure an index.html exists to keep Pages happy
          if [ ! -f docs/html/index.html ]; then
            # Try to pick a reasonable default if one exists
            idx=$(ls docs/html/*index*.html 2>/dev/null | head -n1 || true)
            if [ -n "$idx" ]; then
              cp "$idx" docs/html/index.html
            else
              # Create a simple listing index if nothing obvious exists
              {
                echo '<html><body><h1>AGILab Documentation</h1><ul>'
                for f in docs/html/*.html; do bn=$(basename "$f"); echo "<li><a href=\"$bn\">$bn</a></li>"; done
                echo '</ul></body></html>'
              } > docs/html/index.html
            fi
          fi
          # Ensure root-level index mirrors html index for convenience
          mkdir -p docs
          if [ -f docs/html/index.html ]; then
            cp docs/html/index.html docs/index.html
          fi
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'docs'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

import logging
import os
import json
import webbrowser
from pathlib import Path
import importlib
from typing import Any, Dict, List, Optional, Tuple, Union
import pandas as pd
import streamlit as st
import tomli
import tomli_w
from code_editor import code_editor
from agi_env.pagelib import (
    activate_mlflow,
    find_files,
    run_lab,
    load_df,
    get_custom_buttons,
    get_info_bar,
    get_about_content,
    get_css_text,
    export_df,
    save_csv,
    scan_dir,
    on_df_change,
    render_logo,
    inject_theme,
)
from agi_env import AgiEnv, normalize_path

STEPS_FILE_NAME = "lab_steps.toml"

DEFAULT_DF = "export.csv"

BUTTONS_PER_LINE = 20

JUPYTER_URL = "http://localhost:8888"

logger = logging.getLogger(__name__)

class JumpToMain(Exception):
    ...

def convert_paths_to_strings(*args: Any, **kwargs: Any) -> Any: ...

def on_page_change(*args: Any, **kwargs: Any) -> Any: ...

def on_step_change(*args: Any, **kwargs: Any) -> Any: ...

def load_last_step(*args: Any, **kwargs: Any) -> Any: ...

def clean_query(*args: Any, **kwargs: Any) -> Any: ...

def _read_steps(*args: Any, **kwargs: Any) -> Any: ...

def load_all_steps(*args: Any, **kwargs: Any) -> Any: ...

def on_query_change(*args: Any, **kwargs: Any) -> Any: ...

def extract_code(*args: Any, **kwargs: Any) -> Any: ...

def _format_for_responses(*args: Any, **kwargs: Any) -> Any: ...

def _response_to_text(*args: Any, **kwargs: Any) -> Any: ...

def chat_online(*args: Any, **kwargs: Any) -> Any: ...

def ask_gpt(*args: Any, **kwargs: Any) -> Any: ...

def is_query_valid(*args: Any, **kwargs: Any) -> Any: ...

def get_steps_list(*args: Any, **kwargs: Any) -> Any: ...

def get_steps_dict(*args: Any, **kwargs: Any) -> Any: ...

def remove_step(*args: Any, **kwargs: Any) -> Any: ...

def toml_to_notebook(*args: Any, **kwargs: Any) -> Any: ...

def save_query(*args: Any, **kwargs: Any) -> Any: ...

def save_step(*args: Any, **kwargs: Any) -> Any: ...

def on_nb_change(*args: Any, **kwargs: Any) -> Any: ...

def notebook_to_toml(*args: Any, **kwargs: Any) -> Any: ...

def on_import_notebook(*args: Any, **kwargs: Any) -> Any: ...

def on_lab_change(*args: Any, **kwargs: Any) -> Any: ...

def open_notebook_in_browser(*args: Any, **kwargs: Any) -> Any: ...

def sidebar_controls(*args: Any, **kwargs: Any) -> Any: ...

def mlflow_controls(*args: Any, **kwargs: Any) -> Any: ...

def display_lab_tab(*args: Any, **kwargs: Any) -> Any: ...

def display_history_tab(*args: Any, **kwargs: Any) -> Any: ...

def page(*args: Any, **kwargs: Any) -> Any: ...

def get_df_files(*args: Any, **kwargs: Any) -> Any: ...

def load_df_cached(*args: Any, **kwargs: Any) -> Any: ...

def main(*args: Any, **kwargs: Any) -> Any: ...
